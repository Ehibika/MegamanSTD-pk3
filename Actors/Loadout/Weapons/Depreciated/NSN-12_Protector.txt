/*=============================
Comrads in trouble? as the medic of the team sometimes you need a means to prevent harm rather
than simply undo it, well as always, neumodian enterprises has you covered on that front.

The protector is the sister gadget to the mending tool that encases an ally in a healing
shield that remains untill some time after the host has been fully restored. of course
being a shield, it will midigate a bit of damage by half.

*///===========================

actor Protector : WepMasterBase
{
Tag "Protector"
Weapon.AmmoUse 1
Weapon.AmmoGive 3
scale 2.0
Obituary "$OB_Protector"
inventory.icon "PRTCI"
Inventory.Pickupmessage "$PU_MEGABUSTER"
weapon.ammotype "ProtectorClip"
+WEAPON.AMMO_OPTIONAL
+WEAPON.DONTBOB
//+WEAPON.NOAUTOFIRE
+WEAPON.NOAUTOAIM
Weapon.slotnumber 2
States
{
Spawn:
WEAP X 1
stop
Ready:
HLBR A 0 A_Jumpifinventory("WilyTeamFlag",1,"RedReady")
HLBB A 0 
RedReady:
"####" A 0 A_Jumpifinventory("TargActive",1,2)
"####" A 0 ACS_NamedExecuteAlways("TracerTargeter",0,1,630)
"####" A 0
"####" A 1 A_WeaponReady
"####" B 0 A_Jumpif(CallACS("NEUM_ButtonCheck",BT_USER1) == True,"User1")
"####" B 0 A_Jumpif(CallACS("NEUM_ButtonCheck",BT_USER2) == True,"User2")
"####" B 0 A_Jumpif(CallACS("NEUM_ButtonCheck",BT_USER3) == True,"User3")
"####" B 0 A_Jumpif(CallACS("NEUM_ButtonCheck",BT_USER4) == True,"User4")
"####" A 0 A_Jumpif(CallACS("NEUM_ButtonCheck",BT_RELOAD) == True,"Reload")
"####" A 0 A_Jumpifinventory("ProtectorClip",1,"Ready")
Goto Reload

OverHeatReady:
"####" A 1 A_WeaponReady(WRF_NOPRIMARY)
Goto Ready
//===============
Deselect:
TNT1 A 0 A_TakeInventory("TargActive",9)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
"####" A 1 A_Lower
Loop
Select:
TNT1 A 0 ACS_NamedExecuteAlways("TracerTargeter",0,1,630)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
"####" A 1 A_Raise
Loop
Fire:
"####" A 0 A_JumpIfNoAmmo("NoAmmo")
"####" A 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == TRUE, "NoTargShot")
"####" A 0 A_PlaySoundEx("weapon/tengushot","Weapon")

"####" A 0 A_GiveInventory("ProtectorShooter")
"####" BC 2 A_WeaponReady(WRF_NOPRIMARY)
"####" A 5 A_WeaponReady(WRF_NOPRIMARY)
Goto Hold

NoTargShot:
"####" A 5 A_WeaponReady(WRF_NOPRIMARY)
Goto Hold
Hold:
"####" A 1 
"####" C 0 A_REfire
goto Ready


NoAmmo:
"####" A 1
"####" A 0 A_Jumpifinventory("ProtectorClip",1,"Ready")
Reload:
	"####" A 0 A_ZoomFactor(1.0,0)
	"####" A 0 A_TakeInventory("ZoomMode")
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,82)
"####" A 0 A_TakeInventory("Reload_Trigger",999)
"####" A 0 A_Jumpifinventory("ProtectorClip",1,"Reload2")
"####" A 16 A_WeaponReady(WRF_NOBOB|WRF_NOPRIMARY)
goto Reloadloop
Reload2:
"####" A 16 A_WeaponReady(WRF_NOBOB)
goto Reloadloop
Reloadloop:
"####" A 1 Offset(0,82)
"####" A 0 A_PlaySoundEx("weapon/rminestick","Weapon")
"####" A 0 A_Giveinventory("ProtectorClip",1)
"####" A 0 A_Jumpifinventory("ProtectorClip",3,"ReloadLoopEnd")
"####" A 0 A_Jumpifinventory("ProtectorClip",2,2)
"####" A 19 Offset(0,82)
Goto Reloadloop
"####" A 19 A_WeaponReady(WRF_NOBOB)
Goto Reloadloop
ReloadLoopEnd:
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
"####" A 0 A_PlaySoundEx("weapon/Crashland","Weapon")
"####" A 1 A_Refire("Fire")
Goto Ready
Flash:
TNT1 A 5 
stop
NoFlash:
TNT1 A 1
stop
}
}

actor Protector2 : Protector
{Weapon.slotnumber 2}
//[+]========================================================================[+]
//--------------------------------|Ammo & inventory|---------------------------
//[+]========================================================================[+]
actor ProtectorClip : Ammo
{
inventory.amount 1
inventory.maxamount 3
}

Actor ProtectorFlag : PowerProtection {inventory.amount 1 DamageFactor "NORMAL", 0.5 powerup.duration 10}


//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]
actor BarrierBeam
{
PROJECTILE
+DONTBLAST
//+LOOKALLAROUND
+SEEKERMISSILE
+NOCLIP
+NOINTERACTION
Renderstyle "Translucent"
Alpha 0.95
radius 8
height 8
Damage (0)
Meleerange 100
speed 10
floatspeed 28
scale 3.0
Reactiontime 35
States
{
Spawn:
LASH A 0
LASH A 0
LASH A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_TARGET, AAPTR_DEFAULT) //make the shooter our master
LASH A 0 A_TransferPointer(AAPTR_MASTER,AAPTR_DEFAULT,AAPTR_TRACER,AAPTR_TRACER) //Set the Bullet's tracer to the Shooter's, if they have one.
LASH A 0 A_JumpifTracercloser(630,"Targetspotted") //immediately got a tracer, let's aim for them!

TNT1 A 0 A_JumpifinTargetInventory("BeamFXBuffer",1,3)
TNT1 A 0 A_SpawnItemEx("HealFX2",30,random(-5,5),random(-5,5),momx/4,momy/4,1,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_GiveToTarget("BeamFXBuffer",1)
TNT1 A 0
stop

Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("BarrierBeamFX",0,0,0,0)
Goto AfterSpot
AfterSpot:
LASH A 0 A_RearrangePointers(AAPTR_MASTER, AAPTR_DEFAULT, AAPTR_TARGET) //make the target our tracer
LASH A 0 A_TransferPointer(AAPTR_DEFAULT,AAPTR_MASTER,AAPTR_TRACER,AAPTR_TRACER) //Set the shooter's tracer to the bullet's
LASH A 0 A_Jump(256,"GiveHealth")
goto GiveHealth
Death:
TNT1 A 0
stop
GiveHealth:
TNT1 A 1 A_Stop
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",ACS_NamedExecuteWithResult("Tracer_GetTID"),7) == TRUE,"Detatch")

LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
TNT1 A 0 A_GiveToTarget("P_BarrierEngage",1)
//TNT1 A 0 A_GiveInventory("TargHolder",1,AAPTR_MASTER)
//TNT1 A 0 A_GiveInventory("MT_AmmoDrain",1,AAPTR_MASTER)
stop
Detatch: //clear the tracer from the healer's pointer
TNT1 A 0 A_GiveInventory("TracerEraser",1,AAPTR_MASTER)
stop
}
}


actor BarrierBeam_RED : BarrierBeam
{
translation "192:192=54:54", "198:198=42:42"
States
{
/*
Targetcheck2:
LASH A 0 A_Jumpifintargetinventory("RespawnCamera",1,"Doublecheck") //You aren't spawned yet
LASH A 0 A_JumpIf(IsPointerEqual(AAPTR_TARGET, AAPTR_MASTER) == TRUE, "Doublecheck") //don't go for yourself
LASH A 0 A_Jumpifintargetinventory("LightTeamFlag",1,"Doublecheck") //don't Heal enemies
LASH A 0 A_Jumpifintargetinventory("CossackTeamFlag",1,"Doublecheck") //don't Heal enemies
LASH A 0 A_Jumpifintargetinventory("KingTeamFlag",1,"Doublecheck") //don't Heal enemies
Goto Targetspotted
QuickSpot:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
Goto Targetspotted
*/
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("BarrierBeamFX_RED",0,0,0,0)
Goto AfterSpot
}
}


actor BarrierBeam_BLUE : BarrierBeam
{
States
{
/*
Targetcheck2:
LASH A 0 A_Jumpifintargetinventory("RespawnCamera",1,"Doublecheck") //You aren't spawned yet
LASH A 0 A_JumpIf(IsPointerEqual(AAPTR_TARGET, AAPTR_MASTER) == TRUE, "Doublecheck") //don't go for yourself
LASH A 0 A_Jumpifintargetinventory("WilyTeamFlag",1,"Doublecheck") //don't Heal enemies
LASH A 0 A_Jumpifintargetinventory("CossackTeamFlag",1,"Doublecheck") //don't Heal enemies
LASH A 0 A_Jumpifintargetinventory("KingTeamFlag",1,"Doublecheck") //don't Heal enemies
Goto Targetspotted
QuickSpot:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
Goto Targetspotted
*/
Targetspotted:
LASH A 0 A_RearrangePointers(AAPTR_TRACER, AAPTR_DEFAULT, AAPTR_DEFAULT)
LASH A 0 A_Facetarget
TNT1 A 1 A_CustomMissile("BarrierBeamFX",0,0,0,0)
Goto AfterSpot
}
}
//[+]========================================================================[+]
//--------------------------------|Effect Actors|------------------------------
//[+]========================================================================[+]
actor P_BarrierEffect : FXActor_A
{
scale 2
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("P_BarrierWarper", 0, 0)
Shield:
RNFS AAABBB 1 A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
loop

Death:
TNT1 A 0
stop
}
}

actor BarrierBeamFX
{
+MISSILE
+NOINTERACTION
+NOGRAVITY
-SOLID
+NOCLIP
Speed 25
Damage (0)
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpifcloser(100,"Death")
TNT1 A 0 A_Spawnitemex("BeamGraphic3",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 1 A_Facetarget
Goto BeamContinue
BeamContinue:
TNT1 A 0 A_CustomMissile("BarrierBeamFX",0,0,0,0)
stop
Death:
TNT1 A 0
stop
}
}

	actor BarrierBeamFX_RED : BarrierBeamFX {
	translation "192:192=54:54", "198:198=42:42"
	States
	{
	Spawn:
	TNT1 A 0
	TNT1 A 0 A_Jumpifcloser(100,"Death")
	TNT1 A 0 A_Spawnitemex("BeamGraphic3",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
	TNT1 A 1 A_Facetarget
	Goto BeamContinue
	BeamContinue:
	TNT1 A 0 A_CustomMissile("BarrierBeamFX_RED",0,0,0,0)
	stop
	}
	}

actor BeamGraphic3 : FXActor_B
{
+NOINTERACTION
+NOGRAVITY
+CLIENTSIDEONLY
+FORCEXYBILLBOARD
-SOLID
scale 2.5
alpha 0.6
height 0
radius 0
States
{
Spawn:
TNT1 A 0
BASB UUU 2
BASB UUUUUUU 1 A_Fadeout
stop
}
}

actor BarrierShedEffect : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 AAAAAAAAAA 0 A_SpawnItemEx("BarrierParticle2", 0, 0, 28, 256/24, 256/24, random2(256/24), random(0, 359),SXF_TRANSFERTRANSLATION)
stop
Nope:
TNT1 A 0
stop
}
}

actor NeumBarrierProtection : PowerProtection 
{
powerup.duration 10
damagefactor "NORMAL", 0.0
}

actor NeumBarrierUpSound : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
		Use:
			TNT1 A 0 A_PlaySoundEx("Support/Barrier", "body")
			stop
	}
}

actor BarrierParticle : FXActor_A
{
scale 2
+SeekerMissile
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT,AAPTR_DEFAULT,AAPTR_TARGET)
TMPK DCCBBAAA 2 A_Seekermissile(90,90,SMF_PRECISE)
stop
}
}

actor BarrierParticle2 : FXActor_A
{
scale 2
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0
TMPK DCCBBAAA 2 
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Utility Actors|------------------------------
//[+]========================================================================[+]

actor P_BarrierEngage : CustomInventory  //places a buster posie based on the team.
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("ProtectorFlag",1,"nope")
SKLA A 0 ACS_NamedExecuteAlways("ShieldHitCounter", 0, 2,true)
TNT1 A 0 A_SpawnItemEx("ProtectWatcher",1)
TNT1 A 0 A_SpawnItemEx("P_BarrierEffect", 0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_PlaySoundEx("Support/Barrier", "body")
Stop
nope:
TNT1 A 0 
Stop
}
}

actor ProtectWatcher : WatcherBase 
{
Var int User_Tick;
Var int User_OverTimer;
States
{
Spawn:

TNT1 A 0
Shield:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 0 A_SetUserVar("User_Tick",User_Tick+1)
TNT1 A 0 A_GiveToTarget("ProtectorFlag", 1)
TNT1 A 1
TNT1 A 0 A_Jumpif(User_Tick >= 7,"Shieldheal")

TNT1 A 0 A_JumpIfInTargetInventory("BurnMark",1,"StatusSkip")
TNT1 A 0 A_JumpIfInTargetInventory("PoisonMark",1,"StatusSkip")
TNT1 A 0 A_TakeFromTarget("TempFireProof",1)
TNT1 A 0 A_TakeFromTarget("TempPoisonProof",1)
StatusSkip:


TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(GetTotalHPPerc,ACS_ExecuteWithResult(257, 0))>=100,"Shield2")
TNT1 A 0 A_JumpIfInTargetInventory("ShieldHits",2,"Shield")
Goto Death

Shieldheal:
TNT1 A 0 A_GiveToTarget("P_BarrierHeal", 1)
TNT1 A 0 A_SetUserVar("User_Tick",0)
TNT1 A 0 A_JumpIfInTargetInventory("ShieldHits",2,"Shield")
Goto Death

Shield2:
TNT1 A 0 A_SetUserVar("User_OverTimer",User_OverTimer+1)
TNT1 A 0 A_Jumpif(User_OverTimer >= 85,"Death")
TNT1 A 0 A_JumpIfInTargetInventory("ShieldHits",2,"Shield")
Goto Death

Death:
DeathTake:
TNT1 A 0 A_JumpIfInTargetInventory("ShieldHits", 2, 3)
TNT1 A 0 A_GiveToTarget("SkullBreakSound", 1)
TNT1 A 0 A_GiveToTarget("NeumBarrierProtection",1)
TNT1 A 0
TNT1 A 0 A_GiveToTarget("BarrierShedEffect",1)
//TNT1 A 0 A_TakeFromTarget("TempFireProof",1)
//TNT1 A 0 A_TakeFromTarget("TempPoisonProof",1)
TNT1 A 0 A_TakeFromTarget("ProtectorFlag", 999)
TNT1 A 0 A_TakeFromTarget("ShieldHits", 999)
stop
}
}

actor P_BarrierHeal : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Jumpifinventory("CutterFlag",999,"Nope")
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("Actor_Classifier",0,7) == TRUE,"Nope")

TNT1 A 0 A_Jumpifinventory("HealDelay",1,"Nope")
TNT1 A 0 A_Jumpifinventory("PoisonMark",1,"HealBlock")
TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(GetTotalHPPerc,0)>=100,"Nope") // no overheal in this mod
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 0 A_Giveinventory("HealEffectSpawn",1)
TNT1 A 0 HealThing(ACS_ExecuteWithResult(HealRamp,7,12))
TNT1 A 0 //A_PlaySoundEx("item/energyup","Weapon")
TNT1 A 0
stop


Nope:
TNT1 A 0
stop

HealBlock:
TNT1 A 1 A_Giveinventory("HealDelay")
TNT1 A 1 A_Giveinventory("DetoxLevel",3)
TNT1 A 1 A_Giveinventory("DetoxEfectSpawn")
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Item Shooters|------------------------------
//[+]========================================================================[+]
actor ProtectorShooter : CustomInventory 
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
BLTR C 1 A_Jumpifinventory("WilyTeamFlag",1,"TeamRedFire")
BLTR C 1 A_Jumpifinventory("LightTeamFlag",1,"TeamBlueFire")
BUST B 1 A_FireCustomMissile("BarrierBeam",0,1,4,4)
stop
TeamRedFire:
BUST B 1 A_FireCustomMissile("BarrierBeam_RED",0,1,4,4)
TNT1 A 1
stop
TeamBlueFire:
BUST B 1 A_FireCustomMissile("BarrierBeam_BLUE",0,1,4,4)
TNT1 A 1
stop
}
}
