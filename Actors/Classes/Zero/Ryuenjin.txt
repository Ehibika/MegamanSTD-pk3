actor Ability1_Zero : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_RYUENJIN"
Tag "Ryuenjin"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "FSWORDI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
BUST B 0 
"####" B 1 //A_WeaponReady
goto Fire

Fire:
ZSAB A 0 A_Stop
XBUS A 0 A_ChangeFlag("SHOOTABLE",0)
FHUD C 0 ThrustThingZ(0, 60, 0, 1)
FHUD C 0 A_Recoil(-5)
FHUD A 0 A_PlaySoundEx("weapon/flamesword","Weapon")
ZSAB A 0 A_SpawnItemEx("Ryuenjin_BladeWatcher", cos(-pitch)*16, 0, 32+(sin(-pitch)*16), 0, 0, 0, 0, SXF_TRANSFERPITCH)
ZSAB GHIJJJ 2 
ZSAB J 1 A_ChangeFlag("SHOOTABLE",1)
ZSAB QR 2
ZBUS I 1
ZBUS A 5 A_GiveInventory("DashSetOff")
"####" C 0 A_GiveInventory("RyuenjinCooldown")
"####" C 0 A_GiveInventory("RefireBuffer")
"####" C 0 A_Jump(256,"End")
goto End

AltFire:
"####" C 1
End:
"####" C 1 A_TakeInventory("AbilityActiveFlag",9)
"####" C 0 
Goto End
}
}
//====

actor UseAbility1_Zero : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("RyuenjinAbility",1)
fail
}
}

actor RyuenjinAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("RyuenjinCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
//=================
actor RyuenjinEdgeProtect : PowerProtection
{
Powerup.Duration 10
damagefactor "Normal", 1.0
damagefactor "RyuenjinTip", 0.0
damagefactor "RyuenjinEdge", 0.0
}

actor RyuenjinTipProtect : PowerProtection
{
Powerup.Duration 10
damagefactor "Normal", 1.0
damagefactor "RyuenjinTip", 0.0
damagefactor "RyuenjinEdge", 0.0

}

actor RyuSword : FlameSword
{
states
{
Spawn:
TNT1 A 0
TNT1 AAAAA 1 A_SpawnItemEx("RyuSwordTrailB")
Goto Death
}
}

actor Ryuenjin_BladeWatcher
{
    PROJECTILE
    +NOINTERACTION
    renderstyle none
    speed 32
    height 1
    radius 1
    States
    {
    Spawn:
		TNT1 A 0
	    TNT1 A 0 A_PlaySoundEx("weapon/flamesword","Weapon")
    	Spawn1:
	    TNT1 A 0 A_SpawnItemEx("Ryuenjin_BladeStart", 0, 0, 0, cos(pitch), 0, sin(-pitch), -0+(2*args[1]), SXF_MULTIPLYSPEED)
	    TNT1 A 0 A_SpawnItemEx("Ryuenjin_BladeStart", 0, 0, 16, cos(pitch), 0, sin(-pitch), -8+(2*args[1]), SXF_MULTIPLYSPEED)
	    TNT1 A 1 A_Warp(AAPTR_TARGET, cos(-pitch)*16,0,32+(sin(-pitch)*16), 0, WARPF_USECALLERANGLE)
		TNT1 A 0 A_SetArg(1,args[1]+1)		
		TNT1 A 0 A_JumpIf(args[1] < 10,"Spawn1")
        stop
    WindDown1:
        TNT1 A 0
        stop
    }
}

actor Ryuenjin_BladeStart 
{
PROJECTILE
+RIPPER
damagetype "RyuenjinEdge"
Obituary "$OB_RYUENJIN"
damage (50)
height 10
radius 10
Speed 25
scale 2.5
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpif(pitch > 4,"SpawnTip")
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("Ryuenjin_BladeStart",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("Ryuenjin_BladeEdgeFX2",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death

SpawnTip:
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("Ryuenjin_BladeTip",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("Ryuenjin_BladeTipFX",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death

Death:
TNT1 A 0 A_SpawnItemEx("OilPitIgnite",0,0,8)
stop
}
}

actor Ryuenjin_BladeTip
{
PROJECTILE
+RIPPER
damagetype "RyuenjinTip"
Obituary "$OB_RYUENJIN"
damage (100)
height 10
radius 10
Speed 26
scale 2.5
states
{
Spawn:
TNT1 A 0
TNT1 A 0 A_Jumpif(pitch > 10,"Death")
TNT1 A 0 A_setPitch(Pitch+1)
TNT1 A 0 A_SpawnItemEx("Ryuenjin_BladeTip",0,0,0,momx,momy,momz,0,SXF_ABSOLUTEMOMENTUM|SXF_TRANSFERPITCH)
TNT1 A 1 A_SpawnItemEx("Ryuenjin_BladeTipFX",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM)
Goto Death
Death:
TNT1 A 0 A_SpawnItemEx("OilPitIgnite",0,0,8)
stop
}
}

actor Ryuenjin_BladeEdgeFX : BasicGraphicEffect
{
scale 2.5
XScale 4.5
Alpha 1.0
ReactionTime 8
renderstyle "Translucent"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
FSPK A 1
Spawn2:
FSPK BCDA 1 A_Fadeout
TNT1 A 0 A_CountDown
loop

Death:
TNT1 A 0
stop
}
}

actor Ryuenjin_BladeTipFX : Ryuenjin_BladeEdgeFX
{
renderstyle "Add"
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
FSPK ABCD 1
Spawn2:
FSPK ABCD 1 A_Fadeout
TNT1 W 0 A_CountDown
loop

Death:
TNT1 A 0
stop
}
}


actor Ryuenjin_BladeEdgeFX2 : Ryuenjin_BladeEdgeFX {ReactionTime 1}
actor Ryuenjin_BladeTipFX2 : Ryuenjin_BladeTipFX {ReactionTime 1}

actor RyuSwordTrailB : FlameSwordTrail
{
damage (25) 
damagetype "AtomicFire"
translation "41:41=227:277", "248:248=226:266"
}
//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor RyuenjinCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("RyuenjinCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("RyuenjinCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AltCooldownFlag",99)
TNT1 A 0
stop
}
}

actor RyuenjinCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("RyuenjinCooldownItem",85)
TNT1 A 0 A_Giveinventory("AltCooldownFlag")
TNT1 A 0 A_Spawnitemex("RyuenjinCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor RyuenjinCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 85
}