actor Ability1_SuperMegaman : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_SUPERADAPTOR"
Tag "Dash Ability"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "BUSTI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
SAPT K 0 
"####" K 1 Offset(0,110)
"####" K 1 Offset(0,96)
"####" K 1 Offset(0,82)
"####" K 1 Offset(0,70)
"####" K 1 Offset(0,58)
"####" K 1 Offset(0,46)
"####" K 1 Offset(0,32)
"####" K 0 A_GiveInventory("WeaponCharge")
"####" K 0 A_PlaySoundEx("weapon/xbcharge","Weapon")
Ready1:
"####" GH 2 A_WeaponReady(WRF_NOSECONDARY|WRF_ALLOWZOOM)
goto Ready1


Fire:
SAPT L 0 A_TakeInventory("FistFlag",1)
SAPT L 0 A_PlaySoundEx("weapon/adapterfire", "Weapon")
SAPT L 10 A_FireCustomMissile("AdaptorFist2",1,0,8,0)
goto FistWait
FistWait:
SAPT L 1 A_GiveInventory("AdapterWaitCount",1)
SAPT L 0 A_JumpIfInventory("AdapterWaitCount",90,"FistFinish")
SAPT L 0 A_JumpIfInventory("FistFlag",1,"FistFinish")
loop
FistFinish:
SAPT L 0
SAPT L 0 A_TakeInventory("AdapterWaitCount",999)
SAPT L 0 A_PlaySoundEx("weapon/adapterreturn", "Voice")
SAPT L 0 A_TakeInventory("FistFlag",1)
goto Fire.Recall

Fire.Recall:
"####" K 1 Offset(0,32)
"####" K 1 Offset(0,46)
"####" K 1 Offset(0,58)
"####" K 1 Offset(0,70)
"####" K 1 Offset(0,82)
"####" K 1 Offset(0,82)
"####" K 1 Offset(0,96)
"####" K 1 Offset(0,110)
"####" K 0 A_GiveInventory("RocketPunchCooldown")
"####" K 0 A_GiveInventory("RefireBuffer")
"####" K 0 A_Jump(256,"End")
goto End

NoAmmo:
"####" "#" 1
"####" "#" 0 A_Jump(256,"Ready1")
Goto Ready1

//AltFire:
//"####" K 1
End:
"####" K 1 A_TakeInventory("AbilityActiveFlag",9)
"####" K 0 
Goto End

	Sound.BusterCharge:
		TNT1 K 9 A_PlaySoundEx("weapon/adapterchargeloop","Weapon",0)
		TNT1 K 1 A_JumpIfInventory("WeaponCharge",1,"Sound.BusterCharge")
        stop
}
}
//====

actor UseAbility1_SuperMegaman : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("RocketPunchAbility",1)
fail
}
}

actor RocketPunchAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("RocketPunchCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
//=================

//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

actor AdaptorFist2
{
	PROJECTILE
	+SEEKERMISSILE
	+SKYEXPLODE
	+SCREENSEEKER
	Radius 10
	Height 10
	scale 2.5
	damage (45)
	damagetype "SuperAdaptor"
	Obituary "$OB_SUPERADAPTOR"
	speed 50
	reactiontime 15
	States
	{
	Spawn:
	TNT1 A 0 
	TNT1 A 0 A_GiveInventory("ProjectileCode",1)
	Goto Spawn2
	Spawn2:
	TNT1 A 0
	TNT1 A 0 A_SpawnItemEx("FistTrailFX",0,0,0,momx,momy,momz,0,9)
	TNT1 A 1 A_SeekerMissile (2, 10, SMF_LOOK, 50, 10)
	TNT1 A 0 A_CountDown
	TNT1 A 0 A_SpawnItemEx("FistTrailFX",0,0,0,momx,momy,momz,0,9)
	TNT1 A 1 A_SeekerMissile (2, 10, SMF_LOOK, 50, 10)
	TNT1 A 0 A_CountDown
	loop
	Death:
	TNT1 A 1 A_CustomMissile("FistReturn",0,0,0,0)
	stop
	}
}

actor FistTrailFX : BasicExplosion
{
Obituary "$OB_SUPERADAPTOR"
damagetype "MegaBuster"
States
{
Spawn:
TNT1 A 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("FistFX_Graphic",0,0,0,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("FistFX_3",0,0,0,-momx*0.3,-momy*0.3,-momz*0.3,0,9)
TNT1 A 0 A_SpawnItemEx("FistFX_4",0,0,0,-momx*0.6,-momy*0.6,-momz*0.6,0,9)
TNT1 A 0 A_SpawnItemEx("FistFX_5",0,0,0,-momx*0.9,-momy*0.9,-momz*0.9,0,9)
TNT1 A 0 A_SpawnItemEx("FistFX_5",0,0,0,-momx*1.2,-momy*1.2,-momz*1.2,0,9)
//TNT1 A 0 A_SpawnItemEx("FistFX_5",0,0,0,-momx*0.5,-momy*0.5,-momz*0.5,0,9)
TNT1 A 1 
stop
}
}

actor FistFX_Graphic : FXActor_A
{
scale 2.5
Alpha 0.9
States
{
Spawn:
CRBM A 0
SAPT J 1
stop
}
}

actor FistFX_1 : FXActor_A
{
scale 2.5
Alpha 0.9
States
{
Spawn:
CRBM A 0
MXP1 A 1
stop
}
}

actor FistFX_2 : FistFX_1
{
States
{
Spawn:
CRBM A 0
MXP1 B 1
stop
}
}

actor FistFX_3 : FistFX_1
{
States
{
Spawn:
CRBM A 0
MXP1 C 1
stop
}
}

actor FistFX_4 : FistFX_1
{
States
{
Spawn:
CRBM A 0
MXP1 D 1
stop
}
}

actor FistFX_5 : FistFX_1
{
States
{
Spawn:
CRBM A 0
MXP1 E 1
stop
}
}
//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor RocketPunchCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("RocketPunchCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("RocketPunchCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AltCooldownFlag",99)
TNT1 A 0
stop
}
}

actor RocketPunchCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("RocketPunchCooldownItem",122)
TNT1 A 0 A_Giveinventory("AltCooldownFlag")
TNT1 A 0 A_Spawnitemex("RocketPunchCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor RocketPunchCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 122
}