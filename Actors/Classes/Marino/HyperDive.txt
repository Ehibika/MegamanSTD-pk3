Const int DKICK_SPD = 64;
actor Ability1_Marino : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_HYPERDIVE"
Tag "HyperBomb Ability"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "CHARSI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR U 0 
"####" U 1 //A_WeaponReady
goto Fire

Fire:
HSPR U 0 A_PlaySoundEx("weapon/chargekick","Weapon")
"####" U 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,2)
"####" U 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,1)
"####" U 0 A_GiveInventory("BreakDashCharge", 8)
Fire.DashLoop:
"####" W 0 A_GiveInventory("HyperDiveSpeed", 1)
//"####" W 0 A_SpawnItemEx("HyperDiveFX", cos(pitch)*16+sin(-pitch)*12, 8, sin(-pitch)*16+32, momx, momy, momz, 0, SXF_ABSOLUTEMOMENTUM)
"####" W 0 A_SpawnItemEx("HyperDiveSparkFX", 0, 0, 0, 0, 0, -2)
"####" W 1 A_FireCustomMissile("HyperDiveCheck", 0, 0, 0, 0)
"####" W 0 A_JumpIfInventory("BreakDashRecoil", 1, "Fire.Recoil")
"####" W 0 A_TakeInventory("BreakDashCharge", 1)
"####" W 0 A_JumpIfInventory("BreakDashCharge", 1, "Fire.DashLoop")
"####" V 1 A_ScaleVelocity(0.3)
"####" V 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,0)
"####" V 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,0)
"####" VU 2
goto Fire.Conclude
Fire.Recoil:
"####" V 1
"####" V 0 A_PlaySoundEx("weapon/breakdashimpact", "weapon")
"####" V 0 A_ChangeVelocity(-15*cos(pitch), 0, -8*sin(-pitch)+5, CVF_RELATIVE|CVF_REPLACE)
"####" V 0 A_TakeInventory("BreakDashCharge", 100)
"####" V 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,0)
"####" V 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,0)
"####" VU 2
Fire.Conclude:
"####" U 0 A_GiveInventory("HyperDiveCooldown")
"####" U 0 A_GiveInventory("RefireBuffer")
"####" U 0 A_Jump(256,"End")
goto End

AltFire:
"####" U 1
End:
"####" U 1 A_TakeInventory("AbilityActiveFlag",9)
"####" U 0 
Goto End
}
}
//====

actor UseAbility1_Marino : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("HyperDiveAbility",1)
fail
}
}

actor HyperDiveAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("HyperDiveCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
//=================

actor HyperDiveSpeed : CustomInventory
{
    States
    {
    Pickup:
        TNT1 A 0 A_CheckFloor("Floor")
        TNT1 A 0 A_ChangeVelocity(DKICK_SPD*cos(pitch), 0, (DKICK_SPD/1)*sin(-pitch), CVF_RELATIVE|CVF_REPLACE)
        stop
    Floor:
        TNT1 A 0 A_ChangeVelocity(DKICK_SPD*cos(pitch), 0, ((DKICK_SPD/1)*sin(-pitch) > 0) * (DKICK_SPD/1)*sin(-pitch), CVF_RELATIVE|CVF_REPLACE)
        stop
    }
}

actor HyperDiveCheck : FastProjectile
{
    PROJECTILE
    Obituary "$OB_HYPERDIVE"
    Damagetype "BreakDash"
    height 16
    radius 16
    speed 64
    Damage (45)
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        stop
    Death:
        TNT1 A 0 A_SpawnItemEx("BreakDashQuake")
        TNT1 A 0 A_GiveToTarget("BreakDashRecoil", 1)
        stop
    }
}

actor HyperDiveFX
{
    +NOINTERACTION
    +NOGRAVITY
    +CLIENTSIDEONLY
    +FORCEXYBILLBOARD
    -SOLID
    scale 2.5
    height 0
    radius 0
    States
    {
    Spawn:
        CKIC D 0
        CKIC D 1
        stop
    }
}

actor HyperDiveSparkFX
{
    PROJECTILE
    +CLIENTSIDEONLY
    +RIPPER
    damage (0)
    height 2
    radius 1
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        stop
    Death:
        TNT1 AAAAA 0 A_SpawnItemEx("HyperDiveSpark", 0, 0, 0, -frandom(8, 16), 0, frandom(4, 16), frandom(-20, 20))
        stop
    }
}

actor HyperDiveSpark : HyperDiveFX
{
    States
    {
    Spawn:
        CKIC EFF 1
        stop
    }
}
//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor HyperDiveCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("HyperDiveCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("HyperDiveCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AltCooldownFlag",99)
TNT1 A 0
stop
}
}

actor HyperDiveCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("HyperDiveCooldownItem",210)
TNT1 A 0 A_Giveinventory("AltCooldownFlag")
TNT1 A 0 A_Spawnitemex("HyperDiveCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor HyperDiveCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 210
}