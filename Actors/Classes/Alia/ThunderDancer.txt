Const float TD_SprAng = 3.6;
Const float TD_SprAngRev = SRev-TD_SprAng;

Const float TD_SprD_Ang = TD_SprAng/1.5;
Const float TD_SprD_AngRev = SRev-(TD_SprAng/1.5);

actor Ability2_Alia : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_THUNDERDANCER"
Tag "HyperBomb Ability"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "LIGHTNI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{
Ready:
BUST A 0 
"####" A 0 A_PlaySoundEx("weapon/rminestick","Weapon")
"####" B 1 Offset(0,110)
"####" B 1 Offset(0,96)
"####" B 1 Offset(0,82)
"####" B 1 Offset(0,70)
"####" B 1 Offset(0,58)
"####" B 1 Offset(0,46)
"####" B 1 Offset(0,32)
Ready1:
"####" B 1 A_WeaponReady
goto Ready1

Fire:
BUST B 0 A_PlaySoundEx("weapon/ThunderBolt","Weapon")
"####" A 0 A_FireCustomMissile("ThunderDancer",0,2,0,8)
"####" C 1
"####" A 0 A_FireCustomMissile("ThunderDancer",TD_SprD_Ang,0,0,8,0,TD_SprD_Ang)
"####" D 1
"####" A 0 A_FireCustomMissile("ThunderDancer",TD_SprD_Ang,0,0,8,0,TD_SprD_AngRev)
"####" C 1
"####" A 0 A_FireCustomMissile("ThunderDancer",TD_SprD_AngRev,0,0,8,0,TD_SprD_AngRev)
"####" D 1
"####" A 0 A_FireCustomMissile("ThunderDancer",TD_SprD_AngRev,0,0,8,0,TD_SprD_Ang)

"####" CD 1
"####" B 1 Offset(0,32)
"####" B 1 Offset(0,46)
"####" B 1 Offset(0,58)
"####" B 1 Offset(0,70)
"####" B 1 Offset(0,82)
"####" B 1 Offset(0,82)
"####" B 1 Offset(0,96)
"####" B 1 Offset(0,110)
"####" B 1 A_GiveInventory("ThunderDancerCooldown")
"####" A 0 A_GiveInventory("RefireBuffer")
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
"####" A 1
End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" A 0 
Goto End
}
}

actor ThunderDancer
{
PROJECTILE
+BRIGHT
damagetype "SparkShock" //lazy
Obituary "$OB_THUNDERDANCER"
scale 1.5
+RIPPER
Speed 60
Radius 12
Height 6
Damage (1)
reactiontime 12
renderstyle add
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
TNT1 A 0 
SHOC CD 1 A_SpawnItemEx("ThunderShockTrail",-40,0,0,momx,momy,momz,0,9)
//THUN ABCEACEGC 1 A_SpawnItemEx("ThunderDancerFX", random(-18,18), random(-18,18), random(0,34))
THUN A 0 A_CountDown
loop
}
}

actor ThunderDancerFX : MrXTrophy
{
renderstyle Translucent
alpha 0.8
	states
	{
	Spawn:
	PBAL BCDE 2 A_Fadeout
	loop
	}
}


actor ThunderShockTrail : BasicExplosion
{
States
{
Spawn:
TNT1 A 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("ThunderShockTrailFX1",0,0,0,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("ThunderShockTrailFX1",0,0,0,-momx*0.2,-momy*0.2,-momz*0.2,0,9)
TNT1 A 0 A_SpawnItemEx("ThunderShockTrailFX2",0,0,0,-momx*0.4,-momy*0.4,-momz*0.4,0,9)
TNT1 A 0 A_SpawnItemEx("ThunderShockTrailFX2",0,0,0,-momx*0.6,-momy*0.6,-momz*0.6,0,9)
TNT1 A 1 A_SpawnItemEx("ThunderShockTrailFX2",0,0,0,-momx*0.8,-momy*0.8,-momz*0.8,0,9)
TNT1 A 1 A_SpawnItemEx("MoveThunderShockFX",0,frandom(-9,9),frandom(-9,9),0,0,0,0,1)
stop
}
}

actor ThunderShockTrailFX1 : BasicClientside
{
scale 2.5
alpha 1.0
//renderstyle "add"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
SHOC DC 1 
stop
}
}

actor ThunderShockTrailFX2 : BasicClientside
{
scale 2.0
alpha 1.0
//renderstyle "add"
speed 7
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
SHOC CD 1 
stop
}
}


actor MoveThunderShockFX : BasicGraphicEffect
{
    +FORCEXYBILLBOARD
    +BRIGHT
    States
    {
	Spawn:
		TNT1 A 0
		TNT1 A random(1,9)
        ESPA Q 0
        ESPA Q 0 A_Jump(256,1,4)
        ESPA QRS 1
        stop
        ESPA XWV 1
        stop
    }
}


actor UseAbility2_Alia : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("ThunderDancerAbility",1)
fail
} 
}

actor ThunderDancerAbility : CustomInventory
{
states
{
Pickup: 
TNT1 A 0 A_JumpIfInventory("ThunderDancerCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop
Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}

actor ThunderDancerCooler : WatcherBase 
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("ThunderDancerCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("ThunderDancerCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor ThunderDancerCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("ThunderDancerCooldownItem",200)
TNT1 A 0 A_Spawnitemex("ThunderDancerCooler")
stop
Nope:
TNT1 A 0
stop
}
}

actor ThunderDancerCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 200
}