actor Ability2_FlashMan : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_FLASHPOINT"
Tag "Dash Ability"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "FLASHSI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
FLSA A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
"####" A 0 A_GiveInventory("WeaponCharge")
"####" A 0 A_PlaySoundEx("weapon/xbcharge","Weapon")
Ready1:
FLSA A 0 A_GiveInventory("WeaponCharge",1)
"####" A 0 A_WeaponReady(WRF_NOPRIMARY)
"####" A 1 A_JumpIfInventory("WeaponCharge",17,"Ready2")
goto Ready1
Ready2:
"####" B 0 A_FireCustomMissile("FlashPointAimInstantStarter",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" A 1 A_WeaponReady
goto Ready2

Deselect:
TNT1 A 0 A_TakeInventory("AbilityActiveFlag",9)
TNT1 A 0 A_TakeInventory("WeaponCharge",999)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
"####" B 1 A_Lower
Loop


Fire:
"####" A 0 A_PlaySoundEx("weapon/xbshoot","Weapon")
"####" B 0 A_FireCustomMissile("FlashPoint",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" A 0 A_TakeInventory("WeaponCharge",999)
"####" BCA 2
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,110)
"####" A 0 A_GiveInventory("FlashPointCooldown")
"####" A 0 A_GiveInventory("RefireBuffer")
"####" A 0 A_Jump(256,"End")
goto End

AltFire:
FLSA A 0 A_PlaySoundEx("weapon/CentaurFlash","Weapon")
"####" A 0 A_GiveInventory("FlashBlinkStartup", 1)
"####" A 0 A_SpawnItemEX("RingWarpEffect",0,0,32)
"####" A 0 A_GiveInventory("BreakDashCharge", 3)
Fire.DashLoop:
"####" A 0 A_GiveInventory("FlashBlinkSpeed", 1)
"####" A 1 A_FireCustomMissile("FlashBlinkCheck", 0, 0, 0, 0)
"####" A 0 A_JumpIfInventory("BreakDashRecoil", 1, "Fire.Recoil")
"####" A 0 A_TakeInventory("BreakDashCharge", 1)
"####" A 0 A_JumpIfInventory("BreakDashCharge", 1, "Fire.DashLoop")
goto Fire.Conclude
Fire.Recoil:
"####" A 0 A_TakeInventory("BreakDashCharge", 100)
Fire.Conclude:
"####" A 1 A_GiveInventory("FlashBlinkEnder", 1)
"####" A 0 A_SpawnItemEX("RingWarpEffect",0,0,32)
"####" A 0 A_GiveInventory("FlashBlinkCooldown")
"####" A 0 A_GiveInventory("RefireBuffer")
"####" A 0 A_Jump(256,"Ready1")
goto Ready1

NoAmmo:
"####" "#" 1
"####" "#" 0 A_Jump(256,"Ready1")
Goto Ready1

//AltFire:
//"####" A 1
End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" A 0 
Goto End

	Sound.BusterCharge:
		TNT1 A 9 A_PlaySoundEx("weapon/adapterchargeloop","Weapon",0)
		TNT1 A 1 A_JumpIfInventory("WeaponCharge",1,"Sound.BusterCharge")
        stop
}
}
//====

actor UseAbility2_FlashMan : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("FlashPointAbility",1)
fail
}
}

actor FlashPointAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("FlashPointCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
//=================

//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]

	actor FlashPointAim : GolfBallAim
    { 
    Speed 48 
    Gravity 1.0
    wallbouncefactor 0.8
    BounceFactor 1.0
    +DOOMBOUNCE
    +BOUNCEONCEILINGS
    -BOUNCEONFLOORS
    +MBFBOUNCER
    }

	actor FlashPointAimInstantStarter : FlashPointAim
	{

		translation "198:198=220:220", "192:192=229:229"
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 ACS_NamedExecuteWithResult("Arc_Limit_Start")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("FlashPointAimInstantBuffer",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}
	actor FlashPointAimInstantBuffer : FlashPointAim
	{
		+CLIENTSIDEONLY
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("FlashPointAimInstant",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		}
	}

	actor FlashPointAimInstant : FlashPointAim
	{
		+CLIENTSIDEONLY
		States
		{
		Spawn:
			TNT1 A 0
			TNT1 A 0 A_JumpIf(CallACS("Arc_Limit"),"Nope")
			TNT1 A 0 //A_JumpIfInTargetInventory("BetweenShots",1,"Nope")
			TNT1 A 0 A_JumpIf(!CallACS("Arc_ClientSide"),"Perish")
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",(10*momx)/-20.0,-(10*momy)/-20.0,(10*momz)/-20.0,0,0,0,0,SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BallTrailAim",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION )
			TNT1 A 0 A_SpawnItemEx("FlashPointAimInstant",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEVELOCITY)
			TNT1 A 1
			stop
		Nope:
			TNT1 A 1
			stop
		}
	}

Const int Flashpoint_Rad = 480;

actor FlashPoint 
{
PROJECTILE
damagetype "FlashPoint"
Obituary "$OB_FLASHPOINT"
radius 4
height 4
scale 2.0
-NOGRAVITY
+DOOMBOUNCE
+BOUNCEONCEILINGS
+BOUNCEONFLOORS
+THRUACTORS
+MTHRUSPECIES
+USEBOUNCESTATE
+NOTARGETSWITCH
+NOEXPLODEFLOOR
+SLIDESONWALLS
+MBFBOUNCER
+CANBOUNCEWATER
speed 48
gravity 1.0
Damage (0)
wallbouncefactor 0.8
BounceFactor 1.0
reactiontime 25
States
{
Spawn:
FSU1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
FSU1 A 1 A_SpawnItemEx("FlashPointParticle",Random2(15),Random2(15),Random2(15),-momx*0.2,-momy*0.2,-momz*0.2,0,9)
FSU1 A 0 //A_CountDown
Goto Spawn2

Bounce.Floor:
MINB A 0 A_ChangeFlag("NOGRAVITY",false)
MINB A 0 A_ChangeFlag("USEBOUNCESTATE",false)
FSU1 A 1 A_SpawnItemEX("FlashPoint2",0,0,0,momx*0.2,momy*0.2,momz*0.3,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEMOMENTUM,0)
stop
Bounce.Ceiling:
MINB A 0 A_ChangeFlag("NOGRAVITY",false)
MINB A 0 A_ChangeFlag("USEBOUNCESTATE",false)
FSU1 A 1 A_SpawnItemEX("FlashPoint2",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEMOMENTUM,0)
stop

Death:
MINB A 0 A_SpawnItemEx("FlashPointExplosion")
stop
}
}

actor FlashPoint2 : FlashPoint
{
-USEBOUNCESTATE
-NOGRAVITY
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_PlaySoundEX("weapon/Trigger","Soundslot6")
FSU1 ABCDEF 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
FSU1 AAAAAAAAAAAAAAAAAAAAAAAAA 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
TNT1 A 0 A_PlaySoundEX("weapon/Trigger","Soundslot6")
FSU1 ABCDEF 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
FSU1 AAAAAAAAAAAAAAAAAAAAAAAAA 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
TNT1 A 0 A_PlaySoundEX("weapon/Trigger","Soundslot6")
TNT1 A 0 A_PlaySoundEX("weapon/BombAlarm","Soundslot7")
FSU1 ABCDEF 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
FSU1 AAAAAAAAAAAAAAAAAAAAAAAAA 1 A_GiveInventory("GrenadeGroundSlowFunc",1) 
TNT1 A 1 A_Jump(256,"Death")
Goto Death
/*
Spawn2:
FSU1 A 1 A_CountDown
FSU1 A 0 A_CheckFloor("SlowDown")
loop
SlowDown:
FSU1 A 0 A_ScaleVelocity(0.3)
Goto Spawn2
*/
Death:
MINB A 0 A_SpawnItemEx("FlashPointExplosion",0,0,0,0,0,0,0,1)
MINB A 0 A_SpawnItemEx("FlashPointAOEFX")
stop
}
}

actor FlashPointExplosion : BasicExplosion
{
Scale 2.5
damagetype "FlashPoint"
obituary "$OB_FlashPoint"
States
{
Spawn:
NAPC A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
NAPC D 0 A_Explode(10, Flashpoint_Rad, 0,0,Flashpoint_Rad)
NAPC A 0 A_PlaySoundEx("weapon/CentaurFlash", "Weapon")
FSU1 GHI 2 
stop
}
}

actor FlashPointAOEFX : BasicExplosion
{
DamageType "FlashPoint"
obituary "$OB_FlashPoint"
ReactionTime 35
var int user_angle;
var int user_Pitch;
Args 0
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
TNT1 A 5
Spawn2:
TNT1 A 1
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SetUserVar("user_angle", random(1, 360))
TNT1 A 0 A_SetUserVar("user_Pitch", random(-90, 90))
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",cos(user_Pitch)*-Flashpoint_Rad,0,(sin(user_Pitch)*Flashpoint_Rad),0,0,0,user_angle,SXF_TRANSFERPITCH|SXF_ABSOLUTEANGLE|SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)

TNT1 A 0 A_CountDown
Goto Spawn2
Death:
TNT1 A 0 
stop
}
}


actor GrenadeGroundSlowFunc : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnItemEx("FlashPointParticle",Random2(15),Random2(15),Random2(15),-momx*0.2,-momy*0.2,-momz*0.2,0,9)
FSU1 A 0 A_CheckFloor("SlowDown")
stop
SlowDown:
FSU1 A 0 A_ScaleVelocity(0.3)
Goto Spawn2
stop
}
}

actor FlashPointParticle
{
+NOINTERACTION
+NOGRAVITY
+CLIENTSIDEONLY
+FORCEXYBILLBOARD
-SOLID
+BRIGHT
scale 2.5
height 0
radius 0
states
{
Spawn:
TNT1 A 0 
FLSA MNOPO 4
FLSA NZOZPZOZ 2
stop
}
}
//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor FlashPointCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("FlashPointCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("FlashPointCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AbilityCooldownFlag",99)
TNT1 A 0
stop
}
}

actor FlashPointCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("FlashPointCooldownItem",280)
TNT1 A 0 A_Giveinventory("AbilityCooldownFlag")
TNT1 A 0 A_Spawnitemex("FlashPointCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor FlashPointCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 280
}