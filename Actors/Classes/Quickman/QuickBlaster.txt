const float QB_SPD = 3.2; 
const float QB_SPD2 = 2.8; 

actor Ability1_Quickman : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "whatanicetag"
weapon.ammotype2 "BusterAmmo"
inventory.icon "QUICKSI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
QUMN A 1 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,32)
goto Fire

Fire:
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
QUMN A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" AB 1 A_FireCustomMissile("QuickBlasterSTD",frandom(-(QB_SPD),(QB_SPD)),0,8,0,0,frandom(-(QB_SPD2),(QB_SPD2)))
"####" A 7
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,110)
"####" A 1 A_GiveInventory("QuickBlasterCooldown")
"####" A 0 A_Jump(256,"End")
goto End

AltFire:
"####" A 1
Goto Fire
End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" A 0 
Goto End
}
}
//====

actor UseAbility1_Quickman : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("QuickBlasterAbility",1)
fail
}
}

actor QuickBlasterAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("QuickBlasterCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
// A PROJECTILE
//=================

actor QuickBlasterSTD
{
PROJECTILE
Damage (8)
scale 2.5
damagetype "QuickBoomerangBoss"
Obituary "$OB_QUICKBOOMERANG"
radius 6
height 12
speed 64
states
{
Spawn:
QUIC AABBCCDD 1 A_SpawnItemEx("QuickBlasterFX")
loop
Death:
TNT1 A 0 A_SpawnItemEx("ExplosionEffect1")
stop
Crash:
TNT1 A 0 A_SpawnItemEx("ExplosionEffect1")
//TNT1 A 1 A_GiveToTarget("AtomicSpeedResource",5)
stop
}
}

actor AtomicSpeedUp : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_GiveInventory("AtomicSpeedResource",1)
TNT1 A 0 A_JumpIfInventory("AtomicSpeedResource",87,"Levelup1")
stop

Levelup1:
TNT1 A 0 A_JumpIfInventory("AtomicSpeedResource",175,"Levelup2")
TNT1 A 0 A_JumpIfInventory("AtomicSpeedLevel",1,"Nope")
TNT1 A 0 A_GiveInventory("AtomicSpeedLevel",1)
TNT1 A 0 A_PlaySoundEx("item/Refill","SoundSlot7")
TNT1 A 0 ACS_NamedExecuteWithResult("SpeedUpdate",0.2*FVM)
stop

Levelup2:
TNT1 A 0 A_JumpIfInventory("AtomicSpeedLevel",2,"Nope")
TNT1 A 0 A_GiveInventory("AtomicSpeedLevel",1)
TNT1 A 0 A_PlaySoundEx("item/Refill","SoundSlot7")
TNT1 A 0 ACS_NamedExecuteAlways("SpeedUpdate",0.2*FVM)
stop


Nope:
TNT1 A 0 
stop
}
}

actor AtomicSpeedLevel : inventory
{
inventory.amount 1
inventory.maxamount 2
}

actor QuickBlasterFX
{
+NOINTERACTION
+FORCEXYBILLBOARD
+CLIENTSIDEONLY
-SOLID
+NOGRAVITY
RenderStyle "add"
Alpha 0.75
Scale 1.5
States
{
Spawn:
QUIC AABBCCDD 1 A_FadeOut
stop
}
}



//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor QuickBlasterCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("QuickBlasterCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("QuickBlasterCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor QuickBlasterCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("QuickBlasterCooldownItem",140)
TNT1 A 0 A_Spawnitemex("QuickBlasterCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor QuickBlasterCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 140
}