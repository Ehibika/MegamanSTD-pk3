actor Ability2_Cinnamon : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "Angel Aura"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "HFLAI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR B 0 
"####" B 0 ACS_NamedExecuteAlways("TracerTargeter",0,TG_TEAM,1200)
"####" B 0 ACS_NamedExecuteAlways("MSTD_MedivisionScript",0,1)
Ready2:
"####" A 1 A_WeaponReady
goto Ready2

Fire:
"####" B 0 A_JumpIf(IsPointerEqual(AAPTR_TRACER, AAPTR_NULL) == TRUE, "NoTarg")
"####" B 0 A_PlaySoundEx("support/HealPulse","Weapon")
"####" B 0 A_FireCustomMissile("HealSpiralSpawner",0,1,0,0)
"####" NOPQR 2 A_GiveInventory("TargHolder")
"####" R 5 A_FireCustomMissile("HealPulseActor",0,0,0,0)
"####" B 0 A_TakeInventory("TargHolder")
"####" B 0 A_GiveInventory("AngelAuraCooldown") //
"####" B 0 A_GiveInventory("RefireBuffer") //
"####" ML 2
"####" B 0 A_Jump(256,"End")
goto End

NoTarg: 
"####" "#" 5 ACS_Execute(979,0)
Goto Ready2

AltFire:
"####" B 0 A_PlaySoundEx("support/HealPulse","Weapon")
"####" B 0 A_FireCustomMissile("HealSpiralSpawner",0,1,0,0)
"####" NOPQR 2 
"####" R 5 A_FireCustomMissile("SelfHealPulseActor",0,0,0,0)
"####" B 0 A_GiveInventory("AngelAuraCooldown") //
"####" B 0 A_GiveInventory("RefireBuffer") //
"####" ML 2
"####" B 0 A_Jump(256,"End")
goto End


End:
"####" B 1 A_TakeInventory("TargActive",9)
"####" B 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor UseAbility2_Cinnamon : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("AngelAuraAbility",1)
fail
}
}

actor AngelAuraAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("AngelAuraCooldownItem",1,"Deny")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop

Deny:
TNT1 A 0 acs_execute(979,0)
stop
}
}
//=================
//=================
Const Int AngelAuraAOE = 216;
Const int RGI_AngelAura = 3;
Const int RGI_AngelAuraSelf = 4;

actor HealSpiralSpawner
{
PROJECTILE
+NOINTERACTION
+NOCLIP
Damage(0)
Height 1
Radius 1
Speed 0
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1
TNT1 A 0 A_SpawnItemEx("HealSpiralFX", 46,0,-8,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("HealSpiralFX", 46,0,-8,0,0,0,-120,1)
TNT1 A 0 A_SpawnItemEx("HealSpiralFX", 46,0,-8,0,0,0,120,1)
stop
}
}

actor HealSpiralFX : ProjectileBase
{
+NOINTERACTION
+RIPPER
Radius 38
Height 10
scale 2.5
damage (0)
ReactionTime 25
speed 0
var int user_speed;
var int user_maxturn;
var int user_turndivisor;
var int user_turndivisor_add;
States
{
Spawn:
POWS A 0
TNT1 A 0 A_SetUserVar("user_speed", 15)
TNT1 A 0 A_SetUserVar("user_maxturn", 1500)
TNT1 A 0 A_SetUserVar("user_turndivisor", 50)
TNT1 A 0 A_SetUserVar("user_turndivisor_add", 12)
Spawn2:
TNT1 A 0 A_Setangle(angle-user_maxturn/user_turndivisor)
TNT1 A 1 A_ChangeVelocity(user_speed,0,0,CVF_RELATIVE|CVF_REPLACE)
TNT1 A 0 A_SetUserVar("user_turndivisor",user_turndivisor+user_turndivisor_add)
TNT1 A 0 A_SpawnitemEX("HealPulseParticle",0,0,0,0,0,0,0,1)
TNT1 A 0 A_CountDown
TNT1 A 0 A_Setangle(angle-user_maxturn/user_turndivisor)
TNT1 A 1 A_ChangeVelocity(user_speed,0,0,CVF_RELATIVE|CVF_REPLACE)
TNT1 A 0 A_SetUserVar("user_turndivisor",user_turndivisor+user_turndivisor_add)
TNT1 A 0 A_CountDown
loop
Death:
POWS A 0
stop
}
}

actor HealPillar
{
PROJECTILE
+NOINTERACTION
+NOCLIP
Damage(0)
Height 1
Radius 1
Speed 0
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1
TNT1 AAA 3 A_SpawnitemEX("HealPulseParticle",0,0,0,0,0,0,0,1)
stop
}
}

actor HealPulseActor : ProjectileBase
{
+DONTBLAST
+SKYEXPLODE
+THRUACTORS

+RIPPER
+NOINTERACTION
reactiontime 60
damage (0)
radius 3
height 3
scale 3.0
speed 0
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_TransferPointer(AAPTR_TARGET,AAPTR_DEFAULT,AAPTR_TRACER,AAPTR_TRACER)
//==
TNT1 A 1 
TNT1 A 1 A_JumpIf(IsPointerEqual(AAPTR_TRACER,AAPTR_NULL) == False, "Heal")
Goto Death

Heal:
TNT1 A 1 A_Warp(AAPTR_TRACER,0,0,28,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
TNT1 A 0 ACS_NamedExecuteAlways("STD_RadiusGive",0,RGI_AngelAura,AngelAuraAOE,RG_TEAM)
TNT1 A 0 ACS_NamedExecuteAlways("STD_RadiusGive",0,RGI_AngelAuraSelf,AngelAuraAOE,RG_SELF)
TNT1 A 0 A_SpawnItemEX("AngelAuraImpactRing",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION)
TNT1 A 5
Goto Death

Death:
TNT1 A 0 
stop
}
}

actor HealPulseActor2 : HealPulseActor
{
    States
    {
    Spawn:
    TNT1 A 0 
    TNT1 A 1 A_GiveInventory("ProjectileCode",1)
	TNT1 A 0 A_SpawnItemEX("AngelAura_Healer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION)
    TNT1 A 0 A_GiveInventory("HealPulseFeedback",1)
    TNT1 A 5
    Goto Death
    
    Death:
    TNT1 A 0 
    stop
    }
}


actor SelfHealPulseActor : HealPulseActor
{
    States
    {
    Spawn:
    TNT1 A 0 
    TNT1 A 1 A_GiveInventory("ProjectileCode",1)
	TNT1 A 0 A_SpawnItemEX("AngelAura_SelfHealer",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION)
    TNT1 A 0 A_GiveInventory("HealPulseFeedback",1)
    //---
    TNT1 A 0 ACS_NamedExecuteAlways("STD_RadiusGive",0,RGI_AngelAura,AngelAuraAOE,RG_TEAM)
    TNT1 A 0 A_SpawnItemEX("AngelAuraImpactRing",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION)
    TNT1 A 5
    Goto Death
    
    Death:
    TNT1 A 0 
    stop
    }
}

actor AngelAura_Healer : BasicHelper 
{
Reactiontime 10
States
{
Spawn:
TNT1 A 0
TNT1 A 1
Spawn.Loop:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpifInventory("PoisonMark",1,"HealBlock",AAPTR_TARGET)
TNT1 A 0 A_JumpIf(CallACS("MSTD_HealthPercent",AAPTR_TARGET)>=100,"HealSkip")

TNT1 A 0 A_SetArg(0,CallACS("HealRamp",6,12,AAPTR_TARGET))
TNT1 A 1 ACS_NamedExecuteAlways("MSTD_HealPointer",0,AAPTR_TARGET,args[0],1)
TNT1 A 0 A_GiveInventory("ScrewShotHealFeedback",1,AAPTR_TARGET)
TNT1 A 17 A_CountDown
Goto Spawn.Loop
HealBlock:
TNT1 A 0 A_GiveInventory("DetoxLevel",15,AAPTR_TARGET)
TNT1 A 0 A_GiveInventory("DetoxEfectSpawn",1,AAPTR_TARGET)
TNT1 A 17 A_CountDown
Goto Spawn.Loop
HealSkip:
TNT1 A 17 A_CountDown
Goto Spawn.Loop

Death:
TNT1 A 0
stop
}
}

actor AngelAura_SelfHealer : AngelAura_Healer 
{
States
{
Spawn:
TNT1 A 0
TNT1 A 1
Spawn.Loop:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"Death")
TNT1 A 0 A_JumpifInventory("PoisonMark",1,"HealBlock",AAPTR_TARGET)
TNT1 A 0 A_JumpIf(CallACS("MSTD_HealthPercent",AAPTR_TARGET)>=100,"HealSkip")
TNT1 A 0 A_SetArg(0,CallACS("HealRamp",6,12,AAPTR_TARGET))
TNT1 A 1 ACS_NamedExecuteAlways("MSTD_HealPointer",0,AAPTR_TARGET,args[0],1)
TNT1 A 0 A_GiveInventory("ScrewShotHealFeedback",1,AAPTR_TARGET)
TNT1 A 22 A_CountDown
Goto Spawn.Loop
HealBlock:
TNT1 A 0 A_GiveInventory("DetoxLevel",15,AAPTR_TARGET)
TNT1 A 0 A_GiveInventory("DetoxEfectSpawn",1,AAPTR_TARGET)
TNT1 A 22 A_CountDown
Goto Spawn.Loop
HealSkip:
TNT1 A 22 A_CountDown
Goto Spawn.Loop

Death:
TNT1 A 0
stop
}
}


actor HealPulseFeedback : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_SpawnitemEX("HealPillar",0,0,26,0,0,8,0,1)
TNT1 A 0 A_PlaySoundEx("Support/Heal2","SoundSlot7")
TNT1 A 0
stop

Nope:
TNT1 A 0
stop
}
}

actor HealPulseParticle : BasicClientside
{
scale 3.0
speed 7
States
{
Spawn:
TNT1 A 0
HARD EDCB 2 
stop
}
}

actor AngelAuraImpactRing : GravityHoldFX
{
	reactiontime 15
	var int user_angle;
	RenderStyle "Translucent"
	States
	{
		Spawn:
		TNT1 A 0
		TNT1 A 0 A_GiveInventory("ProjectileCodeSyncTarget",1)
		TNT1 A 1
		SpawnLoop:
		TNT1 A 0 A_SpawnItemEx("HealFX2", AngelAuraAOE, 0, 0, 5, 0, 0, user_angle, SXF_TRANSFERTRANSLATION)
		TNT1 A 0 A_SpawnItemEx("HealFX2", -AngelAuraAOE, 0, 0, -5, 0, 0, user_angle, SXF_TRANSFERTRANSLATION)
		TNT1 A 0 A_SetUserVar("user_angle", user_angle + 12)
		TNT1 A 0 A_Countdown
		loop
		Death:
		TNT1 A 0 
		stop
	}
}

//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]
actor RadiusGiveItem_3 : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_SpawnItemEX("HealPulseActor2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
stop
Nope:
TNT1 A 0
Stop
}
}


actor RadiusGiveItem_4 : CustomInventory
{
States
{
Pickup:
TNT1 A 0
TNT1 A 0 A_SpawnItemEX("SelfHealPulseActor",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
stop
Nope:
TNT1 A 0
Stop
}
}
//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor AngelAuraCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("AngelAuraCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("AngelAuraCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor AngelAuraCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("AngelAuraCooldownItem",280)
TNT1 A 0 A_Spawnitemex("AngelAuraCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor AngelAuraCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 280
}