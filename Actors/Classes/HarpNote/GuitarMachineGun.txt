actor Ability1_HarpNote : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_GUITARMACHINEGUN"
Tag "Dash Ability"
weapon.ammotype2 "AbilityAmmo"
inventory.icon "SCHSWI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
-WEAPON.NOAUTOFIRE
States
{

Ready:
HPNT A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
"####" U 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,2)
"####" U 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,1)
"####" A 0 A_Stop
"####" A 0 A_PlaySoundEx("machine/string","Weapon")
"####" B 0 A_FireCustomMissile("GMG_Burst",0,1,0,0)
"####" B 0 A_FireCustomMissile("GMG_DamagerStart",0,0,0,0)
"####" A 0 A_GiveInventory("GuitarMachineGunCooldown")
"####" A 10
"####" A 0 A_GiveInventory("GuitarMachineGunTimer")
"####" V 0 ACS_NamedExecuteAlways("core_flyplayer",0,0,0)
"####" V 0 ACS_NamedExecuteAlways("core_freezeplayer",0,0,0)
goto Ready.Subwep
Ready.Subwep:
HPNT A 0 A_JumpIfInventory("AbilityTimeout",1,"Fire.Finish")
HPNT A 1 A_WeaponReady(WRF_NOSECONDARY|WRF_ALLOWZOOM|WRF_NOSWITCH)
goto Ready.Subwep

Deselect:
TNT1 A 0 A_TakeInventory("AbilityActiveFlag",9)
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
"####" B 1 A_Lower
Loop


Fire:
"####" A 0 A_PlaySoundEx("guitar/note","Weapon")
"####" A 0 A_FireCustomMissile("GMG_Shot",0,0,4,4,0,0)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
"####" A 0 A_JumpIfInventory("PulseSongCooldownItem",1,"Fire.after2")
//--
"####" AAA 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOPRIMARY|WRF_ALLOWZOOM|WRF_NOSWITCH)
"####" A 0 A_JumpIfInventory("AbilityTimeout",1,"Fire.Finish")
"####" A 0 A_REfire
goto Ready.Subwep

Fire.after2:
"####" AAA 1 
"####" A 0 A_JumpIfInventory("AbilityTimeout",1,"Fire.Finish")
"####" A 0 A_REfire
goto Ready.Subwep

Zoom:
"####" A 0 A_JumpIfInventory("PulseSongCooldownItem",1,"NoAmmo")
"####" A 0 A_PlaySoundEx("string/shot","SoundSlot6")
"####" A 0 A_FireCustomMissile("PulseSongShot",0,0,4,4,0,0)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,32)
"####" A 0 A_GiveInventory("PulseSongCooldown")
"####" A 0 A_JumpIfInventory("AbilityTimeout",1,"Fire.Finish")
goto Ready.Subwep

Fire.Finish:
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,110)
"####" A 0 A_GiveInventory("RefireBuffer")
"####" A 0 A_Jump(256,"End")
goto End

NoAmmo:
"####" "#" 1
"####" "#" 0 A_Jump(256,"Ready.Subwep")
Goto Ready.Subwep

//AltFire:
//"####" A 1
End:
"####" A 1 A_TakeInventory("AbilityActiveFlag",9)
"####" A 0 
Goto End

	Sound.BusterCharge:
		TNT1 A 9 A_PlaySoundEx("weapon/adapterchargeloop","Weapon",0)
		TNT1 A 1 A_JumpIfInventory("WeaponCharge",1,"Sound.BusterCharge")
        stop
}
}
//====

actor UseAbility1_HarpNote : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("GuitarMachineGunAbility",1)
fail
}
}

actor GuitarMachineGunAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("GuitarMachineGunCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
//=================

//[+]========================================================================[+]
//--------------------------------|Projectiles |--------------------------------
//[+]========================================================================[+]
Actor GuitarMachineGunHitDelay : powerprotection
{
Powerup.duration 17
Damagefactor "GuitarMachineGun", 0
}

Actor GuitarMachineGun2_HitDelay : powerprotection
{
Powerup.duration 3
Damagefactor "GuitarMachineGun2", 0
}



actor GMG_Shot : ProjectileBase
{
Obituary "$OB_GUITARMACHINEGUN"
DamageType "GuitarMachineGun2"
Speed 64
+RIPPER
Damage (10)
radius 3

MissileHeight 16
height 3
scale 1.0
Var Int User_TrailCount;
Var Int User_TP; //TrailPosition

reactiontime 20
States
{
Spawn:
TNT1 A 0 
AQBA L 0 A_GiveInventory("ProjectileCode",1)
Goto Spawn2
Spawn2:
TNT1 A 0 A_SpawnItemEx("GMG_Trail",0,0,0,momx,momy,momz,0,9)
Spawn3:
TNT1 A 0 A_CountDown
TNT1 A 1 
Goto Spawn2
Death:
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1 A_Spawnitemex("BlasterPuff1",0,0,0,0,0,0,0,SXF_TRANSFERTRANSLATION)
stop
}
}


actor GMG_Trail : BasicExplosion
{
Obituary "$OB_GUITARMACHINEGUN"
States
{
Spawn:
TNT1 A 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("GMG_TrailX1",0,0,0,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("GMG_TrailX",0,0,0,-momx*0.1,-momy*0.1,-momz*0.1,0,9)
TNT1 A 0 A_SpawnItemEx("GMG_TrailX",0,0,0,-momx*0.2,-momy*0.2,-momz*0.2,0,9)
TNT1 A 0 A_SpawnItemEx("GMG_TrailX",0,0,0,-momx*0.3,-momy*0.3,-momz*0.3,0,9)
TNT1 A 0 A_SpawnItemEx("GMG_TrailX",0,0,0,-momx*0.4,-momy*0.4,-momz*0.4,0,9)
TNT1 A 1 
stop
}
}

actor GMG_TrailX : FXActor_B
{
scale 2.5
Alpha 0.9
States
{
Spawn:
MGSN O 0
MGSN O 1
//BSTG AAAAA 1 A_Fadeout
stop
}
}

actor GMG_TrailX1 : FXActor_A
{
scale 2.5
Alpha 0.9
States
{
Spawn:
MGSN O 0
MGSN O 1
stop
}
}



Const Int GMG_Range = 120;
Const Int GMG_FXRange = 120;
Const Int GMG_DMG = 10;
Const Int GMG_SegLength = 50;
Const Int GMG_Rad = 32;

actor GMG_DamagerStart //: BasicHelper
{
    +MISSILE
    -SOLID
    +NOCLIP
    +NOINTERACTION
    +NOGRAVITY
    +DONTBLAST
    +DONTREFLECT
    +THRUACTORS
    RenderStyle none
    Radius 2
    Height 2

    Speed 15
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_Warp(2,0,0,32,0,16+8)//But which interpolation? Does it matter?
        TNT1 A 1 A_SpawnItemEx("GMG_Damager",0,0,0,momx,momy,momz,0,8)
        stop
    }
}

actor GMG_Damager : FastProjectileBase
{
    PROJECTILE
    damagetype "GuitarMachineGun"
    Obituary "$OB_GuitarMachineGun"
    +SKYEXPLODE
    +EXPLODEONWATER
    +RIPPER
    +SERVERSIDEONLY
    RenderStyle None
    Damage (0) 
    Radius 10
    Height 10
    speed 15 
    scale 2.5
    states
    {
        Spawn:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("ProjectileCode",1)
        TNT1 A 0 A_SetArg(0,Pitch)
        //TNT1 A 0 A_JumpIf(args[0]%GMG_SegLength == 1,"Spawn.Pause")
        TNT1 A 0 A_JumpIf(Pitch > GMG_Range,"Death2")
        TNT1 A 0 A_SetPitch(Pitch+1)
        TNT1 A 0 A_SpawnItemEx("GMG_Damager",0,0,0,momx,momy,momz,0,552+1)//512+32+8
        TNT1 A 0 A_Stop
        TNT1 A 0 A_Explode(GMG_DMG,32,0,0,32)
        TNT1 A 1
        stop
        Spawn.Pause:
        TNT1 A 0 A_SetArg(0,MomX*FVMF)
        TNT1 A 0 A_SetArg(1,MomY*FVMF)
        TNT1 A 0 A_SetArg(2,MomZ*FVMF)
        TNT1 A 0 A_Stop
        TNT1 A 3 A_SetPitch(Pitch+1)
        TNT1 A 0 A_SpawnItemEx("GMG_Damager",0,0,0,args[0]/FVMF,args[1]/FVMF,args[2]/FVMF,0,552+1)//512+32+8
        TNT1 A 0 A_Stop
        TNT1 A 0 A_Explode(GMG_DMG,GMG_Rad,0,0,GMG_Rad)
        TNT1 A 1
        stop

    Death:
        TNT1 A 0 A_Explode(GMG_DMG,GMG_Rad,0,0,GMG_Rad)
        stop
    Death2:
        TNT1 A 0 A_Stop
        TNT1 A 0 A_Explode(GMG_DMG,GMG_Rad,0,0,GMG_Rad)
        stop

        
    }
}

actor GMG_BurstStart //: BasicHelper
{
    +MISSILE
    -SOLID
    +NOCLIP
    +NOINTERACTION
    +NOGRAVITY
    +DONTBLAST
    +DONTREFLECT
    +THRUACTORS
    RenderStyle none
    Radius 2
    Height 2

    Speed 15
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_Warp(2,0,0,32,0,16+8)//But which interpolation? Does it matter?
        TNT1 A 1 A_SpawnItemEx("GMG_Burst",0,0,0,momx,momy,momz,0,8)
        stop
    }
}

actor GMG_Burst : FastProjectileBase
{
    +MISSILE
    +NOGRAVITY
    +SKYEXPLODE
    +EXPLODEONWATER
    +DONTSPLASH
    +PAINLESS
    +CLIENTSIDEONLY
    +THRUACTORS
    RenderStyle None
    Damage (0)
    Radius 10
    Height 10
    Speed 15
    Scale 2.5
    //Var Float User_X;
    //Var Float User_Y;
    //Var Float User_Z;
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("ProjectileCode",1)
        TNT1 A 0 A_SetArg(0,Pitch)
        TNT1 A 0 A_JumpIf(args[0]%GMG_SegLength == 1,"Spawn.Pause")
        TNT1 A 0 A_JumpIf(Pitch > GMG_Range,"Death2")
        TNT1 A 0 A_SetPitch(Pitch+1)
        TNT1 A 0 A_SpawnItemEx("GMG_Burst",0,0,0,momx,momy,momz,0,552+1)//512+32+8
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,-15,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,15,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 0 A_Stop
        TNT1 A 1
        stop
    Spawn.Pause:
        TNT1 A 0 A_SetArg(0,MomX*FVMF)
        TNT1 A 0 A_SetArg(1,MomY*FVMF)
        TNT1 A 0 A_SetArg(2,MomZ*FVMF)
        TNT1 A 0 A_Stop
        TNT1 A 3 A_SetPitch(Pitch+1)
        TNT1 A 0 A_SpawnItemEx("GMG_Burst",0,0,0,args[0]/FVMF,args[1]/FVMF,args[2]/FVMF,0,552+1)//512+32+8
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,-15,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,0,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 0 A_SpawnItemEx("GMG_Fx1",0,15,0,0,0,0,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        TNT1 A 1
        stop
    Death:
        TNT1 A 0 //A_SpawnItemEx("GMG_EndFX",0,0,0,0,0,0,0,1)
        stop
    Death2:
        TNT1 A 0 A_Stop
        TNT1 A 0 //A_SpawnItemEx("GMG_EndFX",0,0,0,0,0,0,0,1)
        stop
    }
}


actor GuitarMachineGunWatcher : WatcherBase 
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("GuitarMachineGunTimerItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("GuitarMachineGunTimerItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_GiveToTarget("AbilityTimeout")
TNT1 A 0
stop
}
}

actor GuitarMachineGunTimer : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("GuitarMachineGunTimerItem",105)
TNT1 A 0 A_Spawnitemex("GuitarMachineGunWatcher")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor GuitarMachineGunTimerItem : inventory
{
inventory.amount 1
inventory.maxamount 105
}

//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor GuitarMachineGunCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("isDead",1,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("GuitarMachineGunCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("GuitarMachineGunCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0 A_TakeFromTarget("AltCooldownFlag",99)
TNT1 A 0
stop
}
}

actor GuitarMachineGunCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("GuitarMachineGunCooldownItem",525)
TNT1 A 0 A_Giveinventory("AltCooldownFlag")
TNT1 A 0 A_Spawnitemex("GuitarMachineGunCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor GuitarMachineGunCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 525
}

actor GMG_Fx1  
{
PROJECTILE
+NOINTERACTION
+NOGRAVITY
+CLIENTSIDEONLY
height 2
Radius 2
damage (0)
reactiontime 1
scale 2.5
RenderStyle "Translucent"
Alpha 0.8
States
{
Spawn:
ICMS A 0// Thrustthingz(0,30,0,0)
SCHS D 17 
Spawn2:
SCHS DZDZDZ 1 
stop
}
}