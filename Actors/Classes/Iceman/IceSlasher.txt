actor Ability1_Iceman : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "whatanicetag"
weapon.ammotype2 "BusterAmmo"
inventory.icon "ICESI"
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
ICEB A 0 
"####" A 1 Offset(0,110)
"####" A 1 Offset(0,82)
"####" B 1 Offset(0,58)
"####" B 1 Offset(0,32)
"####" C 2
goto Fire

Fire:
"####" C 0 A_PlaySoundEx("weapon/iceslasher","Weapon")
"####" A 0 A_FireCustomMissile("IceSlasherSTD",0,0,4,8)
"####" A 0 A_FireCustomMissile("IceSlasherSTD",5,0,4,8)
"####" A 0 A_FireCustomMissile("IceSlasherSTD",355,0,4,8)
"####" C 0 A_GiveInventory("IceSlasherCooldown")
"####" CBA 3
"####" A 1 Offset(0,32)
"####" A 1 Offset(0,46)
"####" A 1 Offset(0,58)
"####" A 1 Offset(0,70)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,82)
"####" A 1 Offset(0,96)
"####" A 1 Offset(0,110)
"####" A 0 A_Jump(256,"End")
goto End

AltFire:
"####" C 1
End:
"####" C 1 A_TakeInventory("AbilityActiveFlag",9)
"####" C 0 
Goto End
}
}
//====

actor UseAbility1_Iceman : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("IceSlasherAbility",1)
fail
}
}

actor IceSlasherAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("IceSlasherCooldownItem",1,"Nope")
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop

Nope:
TNT1 A 0 ACS_Execute(979,0)
stop
}
}
//=================
// A PROJECTILE
//=================


Actor IceSlasherBosshitDelay : powerprotection
{
Powerup.duration 7
Damagefactor "IceSlasherBoss", 0
}


actor IceSlasherSTD
{
PROJECTILE
Damage (20)
scale 2.5
damagetype "IceSlasherBoss"
+RIPPER
radius 18
height 18
speed 80
states
{
Spawn:
TNT1 A 1 A_SpawnItemEx("IceSlasherTrail",0,0,0,momx,momy,momz,0,9)
loop
Death:
TNT1 A 0 A_SpawnItemEx("ExplosionEffect1")
stop
}
}


actor IceSlasherTrail : BasicExplosion
{
Obituary "$OB_ICESLASHER"
States
{
Spawn:
TNT1 A 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("IceSlasherTrailX1",0,0,0,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("IceSlasherTrailX",0,0,0,-momx*0.2,-momy*0.2,-momz*0.2,0,9)
TNT1 A 0 A_SpawnItemEx("IceSlasherTrailX",0,0,0,-momx*0.4,-momy*0.4,-momz*0.4,0,9)
TNT1 A 0 A_SpawnItemEx("IceSlasherTrailX",0,0,0,-momx*0.6,-momy*0.6,-momz*0.6,0,9)
TNT1 A 0 A_SpawnItemEx("IceSlasherTrailX",0,0,0,-momx*0.8,-momy*0.8,-momz*0.8,0,9)
TNT1 A 1 
stop
}
}

actor IceSlasherTrailX : FXActor_B
{
scale 2.5
Alpha 0.9
States
{
Spawn:
CRBM A 0
ICES A 1
stop
}
}

actor IceSlasherTrailX1 : FXActor_A
{
scale 2.5
Alpha 0.9
States
{
Spawn:
ICES B 1
stop
}
}

actor IceSlasherFX
{
+NOINTERACTION
+FORCEXYBILLBOARD
+CLIENTSIDEONLY
-SOLID
+NOGRAVITY
RenderStyle "add"
Alpha 0.75
Scale 1.5
States
{
Spawn:
ICES AB 3 A_FadeOut
stop
}
}



//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor IceSlasherCooler : WatcherBase // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("IceSlasherCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("IceSlasherCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor IceSlasherCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("IceSlasherCooldownItem",140)
TNT1 A 0 A_Spawnitemex("IceSlasherCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor IceSlasherCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 140
}